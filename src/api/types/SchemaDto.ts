/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as Squidex from "..";

export interface SchemaDto extends Squidex.Resource {
    /** The ID of the schema. */
    id: string;
    /** The user that has created the schema. <span style="white-space: nowrap">`non-empty`</span> */
    createdBy: string;
    /** The user that has updated the schema. <span style="white-space: nowrap">`non-empty`</span> */
    lastModifiedBy: string;
    /** The name of the schema. Unique within the app. <span style="white-space: nowrap">`non-empty`</span> */
    name: string;
    /** The type of the schema. */
    type: Squidex.SchemaType;
    /** The name of the category. */
    category?: string;
    /** The schema properties. */
    properties: Squidex.SchemaPropertiesDto;
    /** Indicates if the schema is a singleton. */
    isSingleton: boolean;
    /** Indicates if the schema is published. */
    isPublished: boolean;
    /** The date and time when the schema has been created. */
    created: Date;
    /** The date and time when the schema has been modified last. */
    lastModified: Date;
    /** The version of the schema. */
    version: number;
    /** The scripts. */
    scripts: Squidex.SchemaScriptsDto;
    /** The preview Urls. */
    previewUrls: Record<string, string>;
    /** The name of fields that are used in content lists. */
    fieldsInLists: string[];
    /** The name of fields that are used in content references. */
    fieldsInReferences: string[];
    /** The field rules. */
    fieldRules: Squidex.FieldRuleDto[];
    /** The list of fields. */
    fields: Squidex.FieldDto[];
}
