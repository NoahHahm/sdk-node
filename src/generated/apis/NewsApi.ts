/* tslint:disable */
/* eslint-disable */
/**
 * Squidex API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ErrorDto,
  FeaturesDto,
} from '../models/index';
import {
    ErrorDtoFromJSON,
    ErrorDtoToJSON,
    FeaturesDtoFromJSON,
    FeaturesDtoToJSON,
} from '../models/index';

export interface NewsGetNewsRequest {
    version?: number;
}

/**
 * NewsApi - interface
 * 
 * @export
 * @interface NewsApiInterface
 */
export interface NewsApiInterface {
    /**
     * 
     * @summary Get features since version.
     * @param {number} [version] The latest received version.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NewsApiInterface
     */
    getNewsRaw(requestParameters: NewsGetNewsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<FeaturesDto>>;

    /**
     * Get features since version.
     */
    getNews(requestParameters: NewsGetNewsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<FeaturesDto>;

}

/**
 * 
 */
export class NewsApi extends runtime.BaseAPI implements NewsApiInterface {

    /**
     * Get features since version.
     */
    async getNewsRaw(requestParameters: NewsGetNewsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<FeaturesDto>> {
        const queryParameters: any = {};

        if (requestParameters['version'] != null) {
            queryParameters['version'] = requestParameters['version'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/news/features`.replace("$app$", encodeURIComponent(this.appName)),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => FeaturesDtoFromJSON(jsonValue));
    }

    /**
     * Get features since version.
     */
    async getNews(requestParameters: NewsGetNewsRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<FeaturesDto> {
        const response = await this.getNewsRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
