/**
 * Squidex API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  TemplateDetailsDto,
  TemplatesDto,
} from '../models/index';
import {
    TemplateDetailsDtoFromJSON,
    TemplatesDtoFromJSON,
} from '../models/index';

export interface TemplatesGetTemplateRequestRaw {
    name: string;
}

/**
 * TemplatesApi - interface
 * 
 * @export
 * @interface TemplatesApiInterface
 */
export interface TemplatesApiInterface {
    /**
     * 
     * @summary Get template details.
     * @param {string} name The name of the template.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TemplatesApiInterface
     */
    getTemplateRaw(name: string, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<TemplateDetailsDto>>;

    /**
     * Get template details.
     */
    getTemplate(name: string, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<TemplateDetailsDto>;

    /**
     * 
     * @summary Get all templates.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TemplatesApiInterface
     */
    getTemplatesRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<TemplatesDto>>;

    /**
     * Get all templates.
     */
    getTemplates(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<TemplatesDto>;

}

/**
 * 
 */
export class TemplatesApi extends runtime.BaseAPI implements TemplatesApiInterface {

    /**
     * Get template details.
     */
    async getTemplateRaw(name: string, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<TemplateDetailsDto>> {
        const _name = name;

        if (_name == null) {
            throw new runtime.RequiredError(
                'name',
                'Required parameter "name" was null or undefined when calling ().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/templates/{name}`.replace(`{${"name"}}`, encodeURIComponent(String(_name))).replace("$app$", encodeURIComponent(this.appName)),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => TemplateDetailsDtoFromJSON(jsonValue));
    }

    /**
     * Get template details.
     */
    async getTemplate(name: string, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<TemplateDetailsDto> {
        const response = await this.getTemplateRaw(name, initOverrides);
        return await response.value();
    }

    /**
     * Get all templates.
     */
    async getTemplatesRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<TemplatesDto>> {

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/templates`.replace("$app$", encodeURIComponent(this.appName)),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => TemplatesDtoFromJSON(jsonValue));
    }

    /**
     * Get all templates.
     */
    async getTemplates(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<TemplatesDto> {
        const response = await this.getTemplatesRaw(initOverrides);
        return await response.value();
    }

}
