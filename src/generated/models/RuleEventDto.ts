/**
 * Squidex API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { RuleJobResult } from './RuleJobResult';
import {
    RuleJobResultFromJSON,
    RuleJobResultToJSON,
} from './RuleJobResult';
import type { ResourceLink } from './ResourceLink';
import {
    ResourceLinkFromJSON,
    ResourceLinkToJSON,
} from './ResourceLink';
import type { RuleResult } from './RuleResult';
import {
    RuleResultFromJSON,
    RuleResultToJSON,
} from './RuleResult';

/**
 * 
 * @export
 * @interface RuleEventDto
 */
export interface RuleEventDto {
    /**
     * The links.
     * @type {{ [key: string]: ResourceLink; }}
     * @memberof RuleEventDto
     */
    links: { [key: string]: ResourceLink; };
    /**
     * The ID of the event.
     * @type {string}
     * @memberof RuleEventDto
     */
    id: string;
    /**
     * The time when the event has been created.
     * @type {Date}
     * @memberof RuleEventDto
     */
    created: Date;
    /**
     * The description.
     * @type {string}
     * @memberof RuleEventDto
     */
    description: string;
    /**
     * The name of the event.
     * @type {string}
     * @memberof RuleEventDto
     */
    eventName: string;
    /**
     * The last dump.
     * @type {string}
     * @memberof RuleEventDto
     */
    lastDump?: string | null;
    /**
     * The number of calls.
     * @type {number}
     * @memberof RuleEventDto
     */
    numCalls: number;
    /**
     * The next attempt.
     * @type {Date}
     * @memberof RuleEventDto
     */
    nextAttempt?: Date | null;
    /**
     * 
     * @type {RuleResult}
     * @memberof RuleEventDto
     */
    result: RuleResult;
    /**
     * 
     * @type {RuleJobResult}
     * @memberof RuleEventDto
     */
    jobResult: RuleJobResult;
}




/**
 * Check if a given object implements the RuleEventDto interface.
 */
export function instanceOfRuleEventDto(value: any): value is RuleEventDto {
    if (!value) {
        return false;
    }
    if (!('links' in value) || value['links'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('created' in value) || value['created'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('eventName' in value) || value['eventName'] === undefined) return false;
    if (!('numCalls' in value) || value['numCalls'] === undefined) return false;
    if (!('result' in value) || value['result'] === undefined) return false;
    if (!('jobResult' in value) || value['jobResult'] === undefined) return false;
    return true;
}

export function RuleEventDtoFromJSON(json: any): RuleEventDto {
    return RuleEventDtoFromJSONTyped(json, false);
}

export function RuleEventDtoFromJSONTyped(json: any, _ignoreDiscriminator: boolean): RuleEventDto {
    if (json == null) {
        return json;
    }
    return {
        
        'links': (mapValues(json['_links'], ResourceLinkFromJSON)),
        'id': json['id'],
        'created': (new Date(json['created'])),
        'description': json['description'],
        'eventName': json['eventName'],
        'lastDump': json['lastDump'] == null ? undefined : json['lastDump'],
        'numCalls': json['numCalls'],
        'nextAttempt': json['nextAttempt'] == null ? undefined : (new Date(json['nextAttempt'])),
        'result': RuleResultFromJSON(json['result']),
        'jobResult': RuleJobResultFromJSON(json['jobResult']),
    };
}

export function RuleEventDtoToJSON(value?: RuleEventDto | null, _ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }
    return {
        
        '_links': (mapValues(value['links'], x => ResourceLinkToJSON(x))),
        'id': value['id'],
        'created': ((value['created']).toISOString()),
        'description': value['description'],
        'eventName': value['eventName'],
        'lastDump': value['lastDump'],
        'numCalls': value['numCalls'],
        'nextAttempt': value['nextAttempt'] == null ? undefined : ((value['nextAttempt'] as any).toISOString()),
        'result': RuleResultToJSON(value['result']),
        'jobResult': RuleJobResultToJSON(value['jobResult']),
    };
}
