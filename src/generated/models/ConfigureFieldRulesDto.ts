/**
 * Squidex API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { FieldRuleDto } from './FieldRuleDto';
import {
    FieldRuleDtoFromJSON,
    FieldRuleDtoToJSON,
} from './FieldRuleDto';

/**
 * 
 * @export
 * @interface ConfigureFieldRulesDto
 */
export interface ConfigureFieldRulesDto {
    /**
     * The field rules to configure.
     * @type {Array<FieldRuleDto>}
     * @memberof ConfigureFieldRulesDto
     */
    fieldRules?: Array<FieldRuleDto> | null;
}


/**
 * Check if a given object implements the ConfigureFieldRulesDto interface.
 */
export function instanceOfConfigureFieldRulesDto(value: any): value is ConfigureFieldRulesDto {
    if (!value) {
        return false;
    }
    return true;
}

export function ConfigureFieldRulesDtoFromJSON(json: any): ConfigureFieldRulesDto {
    return ConfigureFieldRulesDtoFromJSONTyped(json, false);
}

export function ConfigureFieldRulesDtoFromJSONTyped(json: any, _ignoreDiscriminator: boolean): ConfigureFieldRulesDto {
    if (json == null) {
        return json;
    }
    return {
        
        'fieldRules': json['fieldRules'] == null ? undefined : ((json['fieldRules'] as Array<any>).map(FieldRuleDtoFromJSON)),
    };
}

export function ConfigureFieldRulesDtoToJSON(value?: ConfigureFieldRulesDto | null, _ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }
    return {
        
        'fieldRules': value['fieldRules'] == null ? undefined : ((value['fieldRules'] as Array<any>).map(x => FieldRuleDtoToJSON(x))),
    };
}
