/**
 * Squidex API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { RuleActionDto } from './RuleActionDto';
import {
    RuleActionDtoFromJSONTyped,
    RuleActionDtoToJSON,
} from './RuleActionDto';

/**
 * 
 * @export
 * @interface PrerenderRuleActionDto
 */
export interface PrerenderRuleActionDto extends RuleActionDto {
    /**
     * The prerender token from your account.
     * @type {string}
     * @memberof PrerenderRuleActionDto
     */
    token: string;
    /**
     * The url to recache.
     * @type {string}
     * @memberof PrerenderRuleActionDto
     */
    url: string;
}


/**
 * Check if a given object implements the PrerenderRuleActionDto interface.
 */
export function instanceOfPrerenderRuleActionDto(value: any): value is PrerenderRuleActionDto {
    if (!value) {
        return false;
    }
    if (!('token' in value) || value['token'] === undefined) return false;
    if (!('url' in value) || value['url'] === undefined) return false;
    return true;
}

export function PrerenderRuleActionDtoFromJSON(json: any): PrerenderRuleActionDto {
    return PrerenderRuleActionDtoFromJSONTyped(json, false);
}

export function PrerenderRuleActionDtoFromJSONTyped(json: any, _ignoreDiscriminator: boolean): PrerenderRuleActionDto {
    if (json == null) {
        return json;
    }
    return {
        ...RuleActionDtoFromJSONTyped(json, _ignoreDiscriminator),
        'token': json['token'],
        'url': json['url'],
    };
}

export function PrerenderRuleActionDtoToJSON(value?: PrerenderRuleActionDto | null, _ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }
    return {
        ...RuleActionDtoToJSON(value, true),
        'token': value['token'],
        'url': value['url'],
    };
}
