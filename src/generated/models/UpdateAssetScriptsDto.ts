/* tslint:disable */
/* eslint-disable */
/**
 * Squidex API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UpdateAssetScriptsDto
 */
export interface UpdateAssetScriptsDto {
    /**
     * The script that is executed for each asset when querying assets.
     * @type {string}
     * @memberof UpdateAssetScriptsDto
     */
    query?: string | null;
    /**
     * The script that is executed for all assets when querying assets.
     * @type {string}
     * @memberof UpdateAssetScriptsDto
     */
    queryPre?: string | null;
    /**
     * The script that is executed when creating an asset.
     * @type {string}
     * @memberof UpdateAssetScriptsDto
     */
    create?: string | null;
    /**
     * The script that is executed when updating a content.
     * @type {string}
     * @memberof UpdateAssetScriptsDto
     */
    update?: string | null;
    /**
     * The script that is executed when annotating a content.
     * @type {string}
     * @memberof UpdateAssetScriptsDto
     */
    annotate?: string | null;
    /**
     * The script that is executed when moving a content.
     * @type {string}
     * @memberof UpdateAssetScriptsDto
     */
    move?: string | null;
    /**
     * The script that is executed when deleting a content.
     * @type {string}
     * @memberof UpdateAssetScriptsDto
     */
    _delete?: string | null;
}


/**
 * Check if a given object implements the UpdateAssetScriptsDto interface.
 */
export function instanceOfUpdateAssetScriptsDto(value: any): value is UpdateAssetScriptsDto {
    return true;
}

export function UpdateAssetScriptsDtoFromJSON(json: any): UpdateAssetScriptsDto {
    return UpdateAssetScriptsDtoFromJSONTyped(json, false);
}

export function UpdateAssetScriptsDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateAssetScriptsDto {
    if (json == null) {
        return json;
    }
    return {
        
        'query': json['query'] == null ? undefined : json['query'],
        'queryPre': json['queryPre'] == null ? undefined : json['queryPre'],
        'create': json['create'] == null ? undefined : json['create'],
        'update': json['update'] == null ? undefined : json['update'],
        'annotate': json['annotate'] == null ? undefined : json['annotate'],
        'move': json['move'] == null ? undefined : json['move'],
        '_delete': json['delete'] == null ? undefined : json['delete'],
    };
}

export function UpdateAssetScriptsDtoToJSON(value?: UpdateAssetScriptsDto | null, ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }
    return {
        
        'query': value['query'],
        'queryPre': value['queryPre'],
        'create': value['create'],
        'update': value['update'],
        'annotate': value['annotate'],
        'move': value['move'],
        'delete': value['_delete'],
    };
}
