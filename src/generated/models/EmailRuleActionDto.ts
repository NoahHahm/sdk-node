/* tslint:disable */
/* eslint-disable */
/**
 * Squidex API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { RuleActionDto } from './RuleActionDto';
import {
    RuleActionDtoFromJSON,
    RuleActionDtoFromJSONTyped,
    RuleActionDtoToJSON,
} from './RuleActionDto';

/**
 * 
 * @export
 * @interface EmailRuleActionDto
 */
export interface EmailRuleActionDto extends RuleActionDto {
    /**
     * The IP address or host to the SMTP server.
     * @type {string}
     * @memberof EmailRuleActionDto
     */
    serverHost: string;
    /**
     * The port to the SMTP server.
     * @type {number}
     * @memberof EmailRuleActionDto
     */
    serverPort: number;
    /**
     * The username for the SMTP server.
     * @type {string}
     * @memberof EmailRuleActionDto
     */
    serverUsername: string;
    /**
     * The password for the SMTP server.
     * @type {string}
     * @memberof EmailRuleActionDto
     */
    serverPassword: string;
    /**
     * The email sending address.
     * @type {string}
     * @memberof EmailRuleActionDto
     */
    messageFrom: string;
    /**
     * The email message will be sent to.
     * @type {string}
     * @memberof EmailRuleActionDto
     */
    messageTo: string;
    /**
     * The subject line for this email message.
     * @type {string}
     * @memberof EmailRuleActionDto
     */
    messageSubject: string;
    /**
     * The message body.
     * @type {string}
     * @memberof EmailRuleActionDto
     */
    messageBody: string;
}


/**
 * Check if a given object implements the EmailRuleActionDto interface.
 */
export function instanceOfEmailRuleActionDto(value: any): value is EmailRuleActionDto {
    if (!('serverHost' in value) || value['serverHost'] === undefined) return false;
    if (!('serverPort' in value) || value['serverPort'] === undefined) return false;
    if (!('serverUsername' in value) || value['serverUsername'] === undefined) return false;
    if (!('serverPassword' in value) || value['serverPassword'] === undefined) return false;
    if (!('messageFrom' in value) || value['messageFrom'] === undefined) return false;
    if (!('messageTo' in value) || value['messageTo'] === undefined) return false;
    if (!('messageSubject' in value) || value['messageSubject'] === undefined) return false;
    if (!('messageBody' in value) || value['messageBody'] === undefined) return false;
    return true;
}

export function EmailRuleActionDtoFromJSON(json: any): EmailRuleActionDto {
    return EmailRuleActionDtoFromJSONTyped(json, false);
}

export function EmailRuleActionDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): EmailRuleActionDto {
    if (json == null) {
        return json;
    }
    return {
        ...RuleActionDtoFromJSONTyped(json, ignoreDiscriminator),
        'serverHost': json['serverHost'],
        'serverPort': json['serverPort'],
        'serverUsername': json['serverUsername'],
        'serverPassword': json['serverPassword'],
        'messageFrom': json['messageFrom'],
        'messageTo': json['messageTo'],
        'messageSubject': json['messageSubject'],
        'messageBody': json['messageBody'],
    };
}

export function EmailRuleActionDtoToJSON(value?: EmailRuleActionDto | null, ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }
    return {
        ...RuleActionDtoToJSON(value, true),
        'serverHost': value['serverHost'],
        'serverPort': value['serverPort'],
        'serverUsername': value['serverUsername'],
        'serverPassword': value['serverPassword'],
        'messageFrom': value['messageFrom'],
        'messageTo': value['messageTo'],
        'messageSubject': value['messageSubject'],
        'messageBody': value['messageBody'],
    };
}
