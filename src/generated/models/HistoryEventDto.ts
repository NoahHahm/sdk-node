/* tslint:disable */
/* eslint-disable */
/**
 * Squidex API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface HistoryEventDto
 */
export interface HistoryEventDto {
    /**
     * The message for the event.
     * @type {string}
     * @memberof HistoryEventDto
     */
    message: string;
    /**
     * The type of the original event.
     * @type {string}
     * @memberof HistoryEventDto
     */
    eventType: string;
    /**
     * The user who called the action.
     * @type {string}
     * @memberof HistoryEventDto
     */
    actor: string;
    /**
     * Gets a unique id for the event.
     * @type {string}
     * @memberof HistoryEventDto
     */
    eventId: string;
    /**
     * The time when the event happened.
     * @type {Date}
     * @memberof HistoryEventDto
     */
    created: Date;
    /**
     * The version identifier.
     * @type {number}
     * @memberof HistoryEventDto
     */
    version: number;
}


/**
 * Check if a given object implements the HistoryEventDto interface.
 */
export function instanceOfHistoryEventDto(value: any): value is HistoryEventDto {
    if (!('message' in value) || value['message'] === undefined) return false;
    if (!('eventType' in value) || value['eventType'] === undefined) return false;
    if (!('actor' in value) || value['actor'] === undefined) return false;
    if (!('eventId' in value) || value['eventId'] === undefined) return false;
    if (!('created' in value) || value['created'] === undefined) return false;
    if (!('version' in value) || value['version'] === undefined) return false;
    return true;
}

export function HistoryEventDtoFromJSON(json: any): HistoryEventDto {
    return HistoryEventDtoFromJSONTyped(json, false);
}

export function HistoryEventDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): HistoryEventDto {
    if (json == null) {
        return json;
    }
    return {
        
        'message': json['message'],
        'eventType': json['eventType'],
        'actor': json['actor'],
        'eventId': json['eventId'],
        'created': (new Date(json['created'])),
        'version': json['version'],
    };
}

export function HistoryEventDtoToJSON(value?: HistoryEventDto | null, ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }
    return {
        
        'message': value['message'],
        'eventType': value['eventType'],
        'actor': value['actor'],
        'eventId': value['eventId'],
        'created': ((value['created']).toISOString()),
        'version': value['version'],
    };
}
