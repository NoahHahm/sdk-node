/* tslint:disable */
/* eslint-disable */
/**
 * Squidex API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SchemaScriptsDto
 */
export interface SchemaScriptsDto {
    /**
     * The script that is executed for each content when querying contents.
     * @type {string}
     * @memberof SchemaScriptsDto
     */
    query?: string | null;
    /**
     * The script that is executed for all contents when querying contents.
     * @type {string}
     * @memberof SchemaScriptsDto
     */
    queryPre?: string | null;
    /**
     * The script that is executed when creating a content.
     * @type {string}
     * @memberof SchemaScriptsDto
     */
    create?: string | null;
    /**
     * The script that is executed when updating a content.
     * @type {string}
     * @memberof SchemaScriptsDto
     */
    update?: string | null;
    /**
     * The script that is executed when deleting a content.
     * @type {string}
     * @memberof SchemaScriptsDto
     */
    _delete?: string | null;
    /**
     * The script that is executed when change a content status.
     * @type {string}
     * @memberof SchemaScriptsDto
     */
    change?: string | null;
}


/**
 * Check if a given object implements the SchemaScriptsDto interface.
 */
export function instanceOfSchemaScriptsDto(value: object): value is SchemaScriptsDto {
    return true;
}

export function SchemaScriptsDtoFromJSON(json: any): SchemaScriptsDto {
    return SchemaScriptsDtoFromJSONTyped(json, false);
}

export function SchemaScriptsDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): SchemaScriptsDto {
    if (json == null) {
        return json;
    }
    return {
        
        'query': json['query'] == null ? undefined : json['query'],
        'queryPre': json['queryPre'] == null ? undefined : json['queryPre'],
        'create': json['create'] == null ? undefined : json['create'],
        'update': json['update'] == null ? undefined : json['update'],
        '_delete': json['delete'] == null ? undefined : json['delete'],
        'change': json['change'] == null ? undefined : json['change'],
    };
}

export function SchemaScriptsDtoToJSON(value?: SchemaScriptsDto | null, ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }
    return {
        
        'query': value['query'],
        'queryPre': value['queryPre'],
        'create': value['create'],
        'update': value['update'],
        'delete': value['_delete'],
        'change': value['change'],
    };
}
