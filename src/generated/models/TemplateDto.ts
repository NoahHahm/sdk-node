/* tslint:disable */
/* eslint-disable */
/**
 * Squidex API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ResourceLink } from './ResourceLink';
import {
    ResourceLinkFromJSON,
    ResourceLinkFromJSONTyped,
    ResourceLinkToJSON,
} from './ResourceLink';

/**
 * 
 * @export
 * @interface TemplateDto
 */
export interface TemplateDto {
    /**
     * The links.
     * @type {{ [key: string]: ResourceLink; }}
     * @memberof TemplateDto
     */
    links: { [key: string]: ResourceLink; };
    /**
     * The name of the template.
     * @type {string}
     * @memberof TemplateDto
     */
    name: string;
    /**
     * The title of the template.
     * @type {string}
     * @memberof TemplateDto
     */
    title: string;
    /**
     * The description of the template.
     * @type {string}
     * @memberof TemplateDto
     */
    description: string;
    /**
     * True, if the template is a starter.
     * @type {boolean}
     * @memberof TemplateDto
     */
    isStarter: boolean;
}


/**
 * Check if a given object implements the TemplateDto interface.
 */
export function instanceOfTemplateDto(value: object): value is TemplateDto {
    if (!('links' in value) || value['links'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('title' in value) || value['title'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('isStarter' in value) || value['isStarter'] === undefined) return false;
    return true;
}

export function TemplateDtoFromJSON(json: any): TemplateDto {
    return TemplateDtoFromJSONTyped(json, false);
}

export function TemplateDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): TemplateDto {
    if (json == null) {
        return json;
    }
    return {
        
        'links': (mapValues(json['_links'], ResourceLinkFromJSON)),
        'name': json['name'],
        'title': json['title'],
        'description': json['description'],
        'isStarter': json['isStarter'],
    };
}

export function TemplateDtoToJSON(value?: TemplateDto | null, ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }
    return {
        
        '_links': (mapValues(value['links'], ResourceLinkToJSON)),
        'name': value['name'],
        'title': value['title'],
        'description': value['description'],
        'isStarter': value['isStarter'],
    };
}
