/* tslint:disable */
/* eslint-disable */
/**
 * Squidex API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ResourceLink } from './ResourceLink';
import {
    ResourceLinkFromJSON,
    ResourceLinkFromJSONTyped,
    ResourceLinkToJSON,
} from './ResourceLink';
import type { RuleActionDto } from './RuleActionDto';
import {
    RuleActionDtoFromJSON,
    RuleActionDtoFromJSONTyped,
    RuleActionDtoToJSON,
} from './RuleActionDto';
import type { RuleTriggerDto } from './RuleTriggerDto';
import {
    RuleTriggerDtoFromJSON,
    RuleTriggerDtoFromJSONTyped,
    RuleTriggerDtoToJSON,
} from './RuleTriggerDto';

/**
 * 
 * @export
 * @interface RuleDto
 */
export interface RuleDto {
    /**
     * The links.
     * @type {{ [key: string]: ResourceLink; }}
     * @memberof RuleDto
     */
    links: { [key: string]: ResourceLink; };
    /**
     * The ID of the rule.
     * @type {string}
     * @memberof RuleDto
     */
    id: string;
    /**
     * The user that has created the rule.
     * @type {string}
     * @memberof RuleDto
     */
    createdBy: string;
    /**
     * The user that has updated the rule.
     * @type {string}
     * @memberof RuleDto
     */
    lastModifiedBy: string;
    /**
     * The date and time when the rule has been created.
     * @type {Date}
     * @memberof RuleDto
     */
    created: Date;
    /**
     * The date and time when the rule has been modified last.
     * @type {Date}
     * @memberof RuleDto
     */
    lastModified: Date;
    /**
     * The version of the rule.
     * @type {number}
     * @memberof RuleDto
     */
    version: number;
    /**
     * Determines if the rule is enabled.
     * @type {boolean}
     * @memberof RuleDto
     */
    isEnabled: boolean;
    /**
     * Optional rule name.
     * @type {string}
     * @memberof RuleDto
     */
    name?: string | null;
    /**
     * 
     * @type {RuleTriggerDto}
     * @memberof RuleDto
     */
    trigger: RuleTriggerDto;
    /**
     * 
     * @type {RuleActionDto}
     * @memberof RuleDto
     */
    action: RuleActionDto;
    /**
     * The number of completed executions.
     * @type {number}
     * @memberof RuleDto
     */
    numSucceeded: number;
    /**
     * The number of failed executions.
     * @type {number}
     * @memberof RuleDto
     */
    numFailed: number;
    /**
     * The date and time when the rule was executed the last time.
     * @type {Date}
     * @memberof RuleDto
     * @deprecated
     */
    lastExecuted?: Date | null;
}


/**
 * Check if a given object implements the RuleDto interface.
 */
export function instanceOfRuleDto(value: any): value is RuleDto {
    if (!('links' in value) || value['links'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('createdBy' in value) || value['createdBy'] === undefined) return false;
    if (!('lastModifiedBy' in value) || value['lastModifiedBy'] === undefined) return false;
    if (!('created' in value) || value['created'] === undefined) return false;
    if (!('lastModified' in value) || value['lastModified'] === undefined) return false;
    if (!('version' in value) || value['version'] === undefined) return false;
    if (!('isEnabled' in value) || value['isEnabled'] === undefined) return false;
    if (!('trigger' in value) || value['trigger'] === undefined) return false;
    if (!('action' in value) || value['action'] === undefined) return false;
    if (!('numSucceeded' in value) || value['numSucceeded'] === undefined) return false;
    if (!('numFailed' in value) || value['numFailed'] === undefined) return false;
    return true;
}

export function RuleDtoFromJSON(json: any): RuleDto {
    return RuleDtoFromJSONTyped(json, false);
}

export function RuleDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): RuleDto {
    if (json == null) {
        return json;
    }
    return {
        
        'links': (mapValues(json['_links'], ResourceLinkFromJSON)),
        'id': json['id'],
        'createdBy': json['createdBy'],
        'lastModifiedBy': json['lastModifiedBy'],
        'created': (new Date(json['created'])),
        'lastModified': (new Date(json['lastModified'])),
        'version': json['version'],
        'isEnabled': json['isEnabled'],
        'name': json['name'] == null ? undefined : json['name'],
        'trigger': RuleTriggerDtoFromJSON(json['trigger']),
        'action': RuleActionDtoFromJSON(json['action']),
        'numSucceeded': json['numSucceeded'],
        'numFailed': json['numFailed'],
        'lastExecuted': json['lastExecuted'] == null ? undefined : (new Date(json['lastExecuted'])),
    };
}

export function RuleDtoToJSON(value?: RuleDto | null, ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }
    return {
        
        '_links': (mapValues(value['links'], x => ResourceLinkToJSON(x))),
        'id': value['id'],
        'createdBy': value['createdBy'],
        'lastModifiedBy': value['lastModifiedBy'],
        'created': ((value['created']).toISOString()),
        'lastModified': ((value['lastModified']).toISOString()),
        'version': value['version'],
        'isEnabled': value['isEnabled'],
        'name': value['name'],
        'trigger': RuleTriggerDtoToJSON(value['trigger']),
        'action': RuleActionDtoToJSON(value['action']),
        'numSucceeded': value['numSucceeded'],
        'numFailed': value['numFailed'],
        'lastExecuted': value['lastExecuted'] == null ? undefined : ((value['lastExecuted'] as any).toISOString()),
    };
}
