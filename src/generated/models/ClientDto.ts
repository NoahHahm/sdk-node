/* tslint:disable */
/* eslint-disable */
/**
 * Squidex API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ResourceLink } from './ResourceLink';
import {
    ResourceLinkFromJSON,
    ResourceLinkFromJSONTyped,
    ResourceLinkToJSON,
} from './ResourceLink';

/**
 * 
 * @export
 * @interface ClientDto
 */
export interface ClientDto {
    /**
     * The links.
     * @type {{ [key: string]: ResourceLink; }}
     * @memberof ClientDto
     */
    links: { [key: string]: ResourceLink; };
    /**
     * The client id.
     * @type {string}
     * @memberof ClientDto
     */
    id: string;
    /**
     * The client secret.
     * @type {string}
     * @memberof ClientDto
     */
    secret: string;
    /**
     * The client name.
     * @type {string}
     * @memberof ClientDto
     */
    name: string;
    /**
     * The role of the client.
     * @type {string}
     * @memberof ClientDto
     */
    role?: string | null;
    /**
     * The number of allowed api calls per month for this client.
     * @type {number}
     * @memberof ClientDto
     */
    apiCallsLimit: number;
    /**
     * The number of allowed api traffic bytes per month for this client.
     * @type {number}
     * @memberof ClientDto
     */
    apiTrafficLimit: number;
    /**
     * True to allow anonymous access without an access token for this client.
     * @type {boolean}
     * @memberof ClientDto
     */
    allowAnonymous: boolean;
}


/**
 * Check if a given object implements the ClientDto interface.
 */
export function instanceOfClientDto(value: any): value is ClientDto {
    if (!('links' in value) || value['links'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('secret' in value) || value['secret'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('apiCallsLimit' in value) || value['apiCallsLimit'] === undefined) return false;
    if (!('apiTrafficLimit' in value) || value['apiTrafficLimit'] === undefined) return false;
    if (!('allowAnonymous' in value) || value['allowAnonymous'] === undefined) return false;
    return true;
}

export function ClientDtoFromJSON(json: any): ClientDto {
    return ClientDtoFromJSONTyped(json, false);
}

export function ClientDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ClientDto {
    if (json == null) {
        return json;
    }
    return {
        
        'links': (mapValues(json['_links'], ResourceLinkFromJSON)),
        'id': json['id'],
        'secret': json['secret'],
        'name': json['name'],
        'role': json['role'] == null ? undefined : json['role'],
        'apiCallsLimit': json['apiCallsLimit'],
        'apiTrafficLimit': json['apiTrafficLimit'],
        'allowAnonymous': json['allowAnonymous'],
    };
}

export function ClientDtoToJSON(value?: ClientDto | null, ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }
    return {
        
        '_links': (mapValues(value['links'], x => ResourceLinkToJSON(x))),
        'id': value['id'],
        'secret': value['secret'],
        'name': value['name'],
        'role': value['role'],
        'apiCallsLimit': value['apiCallsLimit'],
        'apiTrafficLimit': value['apiTrafficLimit'],
        'allowAnonymous': value['allowAnonymous'],
    };
}
