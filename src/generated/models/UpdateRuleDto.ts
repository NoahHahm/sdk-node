/* tslint:disable */
/* eslint-disable */
/**
 * Squidex API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { RuleActionDto } from './RuleActionDto';
import {
    RuleActionDtoFromJSON,
    RuleActionDtoFromJSONTyped,
    RuleActionDtoToJSON,
} from './RuleActionDto';
import type { RuleTriggerDto } from './RuleTriggerDto';
import {
    RuleTriggerDtoFromJSON,
    RuleTriggerDtoFromJSONTyped,
    RuleTriggerDtoToJSON,
} from './RuleTriggerDto';

/**
 * 
 * @export
 * @interface UpdateRuleDto
 */
export interface UpdateRuleDto {
    /**
     * Optional rule name.
     * @type {string}
     * @memberof UpdateRuleDto
     */
    name?: string | null;
    /**
     * 
     * @type {RuleTriggerDto}
     * @memberof UpdateRuleDto
     */
    trigger?: RuleTriggerDto;
    /**
     * 
     * @type {RuleActionDto}
     * @memberof UpdateRuleDto
     */
    action?: RuleActionDto;
    /**
     * Enable or disable the rule.
     * @type {boolean}
     * @memberof UpdateRuleDto
     */
    isEnabled?: boolean | null;
}

/**
 * Check if a given object implements the UpdateRuleDto interface.
 */
export function instanceOfUpdateRuleDto(value: object): value is UpdateRuleDto {
    return true;
}

export function UpdateRuleDtoFromJSON(json: any): UpdateRuleDto {
    return UpdateRuleDtoFromJSONTyped(json, false);
}

export function UpdateRuleDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateRuleDto {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'] == null ? undefined : json['name'],
        'trigger': json['trigger'] == null ? undefined : RuleTriggerDtoFromJSON(json['trigger']),
        'action': json['action'] == null ? undefined : RuleActionDtoFromJSON(json['action']),
        'isEnabled': json['isEnabled'] == null ? undefined : json['isEnabled'],
    };
}

export function UpdateRuleDtoToJSON(value?: UpdateRuleDto | null, ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }
    return {
        
        'name': value['name'],
        'trigger': RuleTriggerDtoToJSON(value['trigger']),
        'action': RuleActionDtoToJSON(value['action']),
        'isEnabled': value['isEnabled'],
    };
}
