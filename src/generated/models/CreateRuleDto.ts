/**
 * Squidex API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { RuleActionDto } from './RuleActionDto';
import {
    RuleActionDtoFromJSON,
    RuleActionDtoToJSON,
} from './RuleActionDto';
import type { RuleTriggerDto } from './RuleTriggerDto';
import {
    RuleTriggerDtoFromJSON,
    RuleTriggerDtoToJSON,
} from './RuleTriggerDto';

/**
 * 
 * @export
 * @interface CreateRuleDto
 */
export interface CreateRuleDto {
    /**
     * 
     * @type {RuleTriggerDto}
     * @memberof CreateRuleDto
     */
    trigger: RuleTriggerDto;
    /**
     * 
     * @type {RuleActionDto}
     * @memberof CreateRuleDto
     */
    action: RuleActionDto;
}


/**
 * Check if a given object implements the CreateRuleDto interface.
 */
export function instanceOfCreateRuleDto(value: any): value is CreateRuleDto {
    if (!value) {
        return false;
    }
    if (!('trigger' in value) || value['trigger'] === undefined) return false;
    if (!('action' in value) || value['action'] === undefined) return false;
    return true;
}

export function CreateRuleDtoFromJSON(json: any): CreateRuleDto {
    return CreateRuleDtoFromJSONTyped(json, false);
}

export function CreateRuleDtoFromJSONTyped(json: any, _ignoreDiscriminator: boolean): CreateRuleDto {
    if (json == null) {
        return json;
    }
    return {
        
        'trigger': RuleTriggerDtoFromJSON(json['trigger']),
        'action': RuleActionDtoFromJSON(json['action']),
    };
}

export function CreateRuleDtoToJSON(value?: CreateRuleDto | null, _ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }
    return {
        
        'trigger': RuleTriggerDtoToJSON(value['trigger']),
        'action': RuleActionDtoToJSON(value['action']),
    };
}
