/* tslint:disable */
/* eslint-disable */
/**
 * Squidex API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TranslationStatus } from './TranslationStatus';
import {
    TranslationStatusFromJSON,
    TranslationStatusFromJSONTyped,
    TranslationStatusToJSON,
} from './TranslationStatus';

/**
 * 
 * @export
 * @interface TranslationDto
 */
export interface TranslationDto {
    /**
     * 
     * @type {TranslationStatus}
     * @memberof TranslationDto
     */
    status: TranslationStatus;
    /**
     * 
     * @type {TranslationStatus}
     * @memberof TranslationDto
     */
    result: TranslationStatus;
    /**
     * The translated text.
     * @type {string}
     * @memberof TranslationDto
     */
    text?: string | null;
}




/**
 * Check if a given object implements the TranslationDto interface.
 */
export function instanceOfTranslationDto(value: any): value is TranslationDto {
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('result' in value) || value['result'] === undefined) return false;
    return true;
}

export function TranslationDtoFromJSON(json: any): TranslationDto {
    return TranslationDtoFromJSONTyped(json, false);
}

export function TranslationDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): TranslationDto {
    if (json == null) {
        return json;
    }
    return {
        
        'status': TranslationStatusFromJSON(json['status']),
        'result': TranslationStatusFromJSON(json['result']),
        'text': json['text'] == null ? undefined : json['text'],
    };
}

export function TranslationDtoToJSON(value?: TranslationDto | null, ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }
    return {
        
        'status': TranslationStatusToJSON(value['status']),
        'result': TranslationStatusToJSON(value['result']),
        'text': value['text'],
    };
}
