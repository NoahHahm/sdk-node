/* tslint:disable */
/* eslint-disable */
/**
 * Squidex API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ActionTypeEnum } from './ActionTypeEnum';
import {
    ActionTypeEnumFromJSON,
    ActionTypeEnumFromJSONTyped,
    ActionTypeEnumToJSON,
} from './ActionTypeEnum';
import type { RuleActionDto } from './RuleActionDto';
import {
    RuleActionDtoFromJSON,
    RuleActionDtoFromJSONTyped,
    RuleActionDtoToJSON,
} from './RuleActionDto';

/**
 * 
 * @export
 * @interface SignalRRuleActionDto
 */
export interface SignalRRuleActionDto extends RuleActionDto {
    /**
     * The connection string to the Azure SignalR.
     * @type {string}
     * @memberof SignalRRuleActionDto
     */
    connectionString: string;
    /**
     * The name of the hub.
     * @type {string}
     * @memberof SignalRRuleActionDto
     */
    hubName: string;
    /**
     * 
     * @type {ActionTypeEnum}
     * @memberof SignalRRuleActionDto
     */
    action: ActionTypeEnum;
    /**
     * Set the Name of the hub method received by the customer.
     * @type {string}
     * @memberof SignalRRuleActionDto
     */
    methodName?: string | null;
    /**
     * Define target users or groups by id or name. One item per line. Not needed for Broadcast action.
     * @type {string}
     * @memberof SignalRRuleActionDto
     */
    target?: string | null;
    /**
     * Leave it empty to use the full event as body.
     * @type {string}
     * @memberof SignalRRuleActionDto
     */
    payload?: string | null;
}




/**
 * Check if a given object implements the SignalRRuleActionDto interface.
 */
export function instanceOfSignalRRuleActionDto(value: object): value is SignalRRuleActionDto {
    if (!('connectionString' in value) || value['connectionString'] === undefined) return false;
    if (!('hubName' in value) || value['hubName'] === undefined) return false;
    if (!('action' in value) || value['action'] === undefined) return false;
    return true;
}

export function SignalRRuleActionDtoFromJSON(json: any): SignalRRuleActionDto {
    return SignalRRuleActionDtoFromJSONTyped(json, false);
}

export function SignalRRuleActionDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): SignalRRuleActionDto {
    if (json == null) {
        return json;
    }
    return {
        ...RuleActionDtoFromJSONTyped(json, ignoreDiscriminator),
        'connectionString': json['connectionString'],
        'hubName': json['hubName'],
        'action': ActionTypeEnumFromJSON(json['action']),
        'methodName': json['methodName'] == null ? undefined : json['methodName'],
        'target': json['target'] == null ? undefined : json['target'],
        'payload': json['payload'] == null ? undefined : json['payload'],
    };
}

export function SignalRRuleActionDtoToJSON(value?: SignalRRuleActionDto | null, ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }
    return {
        ...RuleActionDtoToJSON(value, true),
        'connectionString': value['connectionString'],
        'hubName': value['hubName'],
        'action': ActionTypeEnumToJSON(value['action']),
        'methodName': value['methodName'],
        'target': value['target'],
        'payload': value['payload'],
    };
}
