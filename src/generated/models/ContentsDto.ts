/* tslint:disable */
/* eslint-disable */
/**
 * Squidex API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ContentDto } from './ContentDto';
import {
    ContentDtoFromJSON,
    ContentDtoFromJSONTyped,
    ContentDtoToJSON,
} from './ContentDto';
import type { ResourceLink } from './ResourceLink';
import {
    ResourceLinkFromJSON,
    ResourceLinkFromJSONTyped,
    ResourceLinkToJSON,
} from './ResourceLink';
import type { StatusInfoDto } from './StatusInfoDto';
import {
    StatusInfoDtoFromJSON,
    StatusInfoDtoFromJSONTyped,
    StatusInfoDtoToJSON,
} from './StatusInfoDto';

/**
 * 
 * @export
 * @interface ContentsDto
 */
export interface ContentsDto {
    /**
     * The links.
     * @type {{ [key: string]: ResourceLink; }}
     * @memberof ContentsDto
     */
    links: { [key: string]: ResourceLink; };
    /**
     * The total number of content items.
     * @type {number}
     * @memberof ContentsDto
     */
    total: number;
    /**
     * The content items.
     * @type {Array<ContentDto>}
     * @memberof ContentsDto
     */
    items: Array<ContentDto>;
    /**
     * The possible statuses.
     * @type {Array<StatusInfoDto>}
     * @memberof ContentsDto
     */
    statuses: Array<StatusInfoDto>;
}

/**
 * Check if a given object implements the ContentsDto interface.
 */
export function instanceOfContentsDto(value: object): value is ContentsDto {
    if (!('links' in value) || value['links'] === undefined) return false;
    if (!('total' in value) || value['total'] === undefined) return false;
    if (!('items' in value) || value['items'] === undefined) return false;
    if (!('statuses' in value) || value['statuses'] === undefined) return false;
    return true;
}

export function ContentsDtoFromJSON(json: any): ContentsDto {
    return ContentsDtoFromJSONTyped(json, false);
}

export function ContentsDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ContentsDto {
    if (json == null) {
        return json;
    }
    return {
        
        'links': (mapValues(json['_links'], ResourceLinkFromJSON)),
        'total': json['total'],
        'items': ((json['items'] as Array<any>).map(ContentDtoFromJSON)),
        'statuses': ((json['statuses'] as Array<any>).map(StatusInfoDtoFromJSON)),
    };
}

export function ContentsDtoToJSON(value?: ContentsDto | null, ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }
    return {
        
        '_links': (mapValues(value['links'], ResourceLinkToJSON)),
        'total': value['total'],
        'items': ((value['items'] as Array<any>).map(ContentDtoToJSON)),
        'statuses': ((value['statuses'] as Array<any>).map(StatusInfoDtoToJSON)),
    };
}
