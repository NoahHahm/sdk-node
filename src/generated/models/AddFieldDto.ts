/**
 * Squidex API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { FieldPropertiesDto } from './FieldPropertiesDto';
import {
    FieldPropertiesDtoFromJSON,
    FieldPropertiesDtoToJSON,
} from './FieldPropertiesDto';

/**
 * 
 * @export
 * @interface AddFieldDto
 */
export interface AddFieldDto {
    /**
     * The name of the field. Must be unique within the schema.
     * @type {string}
     * @memberof AddFieldDto
     */
    name: string;
    /**
     * Determines the optional partitioning of the field.
     * @type {string}
     * @memberof AddFieldDto
     */
    partitioning?: string | null;
    /**
     * 
     * @type {FieldPropertiesDto}
     * @memberof AddFieldDto
     */
    properties: FieldPropertiesDto;
}


/**
 * Check if a given object implements the AddFieldDto interface.
 */
export function instanceOfAddFieldDto(value: any): value is AddFieldDto {
    if (!value) {
        return false;
    }
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('properties' in value) || value['properties'] === undefined) return false;
    return true;
}

export function AddFieldDtoFromJSON(json: any): AddFieldDto {
    return AddFieldDtoFromJSONTyped(json, false);
}

export function AddFieldDtoFromJSONTyped(json: any, _ignoreDiscriminator: boolean): AddFieldDto {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'partitioning': json['partitioning'] == null ? undefined : json['partitioning'],
        'properties': FieldPropertiesDtoFromJSON(json['properties']),
    };
}

export function AddFieldDtoToJSON(value?: AddFieldDto | null, _ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }
    return {
        
        'name': value['name'],
        'partitioning': value['partitioning'],
        'properties': FieldPropertiesDtoToJSON(value['properties']),
    };
}
