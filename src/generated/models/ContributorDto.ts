/**
 * Squidex API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ResourceLink } from './ResourceLink';
import {
    ResourceLinkFromJSON,
    ResourceLinkToJSON,
} from './ResourceLink';

/**
 * 
 * @export
 * @interface ContributorDto
 */
export interface ContributorDto {
    /**
     * The links.
     * @type {{ [key: string]: ResourceLink; }}
     * @memberof ContributorDto
     */
    links: { [key: string]: ResourceLink; };
    /**
     * The ID of the user that contributes to the app.
     * @type {string}
     * @memberof ContributorDto
     */
    contributorId: string;
    /**
     * The display name.
     * @type {string}
     * @memberof ContributorDto
     */
    contributorName: string;
    /**
     * The email address.
     * @type {string}
     * @memberof ContributorDto
     */
    contributorEmail: string;
    /**
     * The role of the contributor.
     * @type {string}
     * @memberof ContributorDto
     */
    role?: string | null;
}


/**
 * Check if a given object implements the ContributorDto interface.
 */
export function instanceOfContributorDto(value: any): value is ContributorDto {
    if (!value) {
        return false;
    }
    if (!('links' in value) || value['links'] === undefined) return false;
    if (!('contributorId' in value) || value['contributorId'] === undefined) return false;
    if (!('contributorName' in value) || value['contributorName'] === undefined) return false;
    if (!('contributorEmail' in value) || value['contributorEmail'] === undefined) return false;
    return true;
}

export function ContributorDtoFromJSON(json: any): ContributorDto {
    return ContributorDtoFromJSONTyped(json, false);
}

export function ContributorDtoFromJSONTyped(json: any, _ignoreDiscriminator: boolean): ContributorDto {
    if (json == null) {
        return json;
    }
    return {
        
        'links': (mapValues(json['_links'], ResourceLinkFromJSON)),
        'contributorId': json['contributorId'],
        'contributorName': json['contributorName'],
        'contributorEmail': json['contributorEmail'],
        'role': json['role'] == null ? undefined : json['role'],
    };
}

export function ContributorDtoToJSON(value?: ContributorDto | null, _ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }
    return {
        
        '_links': (mapValues(value['links'], x => ResourceLinkToJSON(x))),
        'contributorId': value['contributorId'],
        'contributorName': value['contributorName'],
        'contributorEmail': value['contributorEmail'],
        'role': value['role'],
    };
}
