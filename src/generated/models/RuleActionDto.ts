/* tslint:disable */
/* eslint-disable */
/**
 * Squidex API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import { AlgoliaRuleActionDto, AlgoliaRuleActionDtoFromJSONTyped, AlgoliaRuleActionDtoToJSON } from './AlgoliaRuleActionDto';
import { AzureQueueRuleActionDto, AzureQueueRuleActionDtoFromJSONTyped, AzureQueueRuleActionDtoToJSON } from './AzureQueueRuleActionDto';
import { CommentRuleActionDto, CommentRuleActionDtoFromJSONTyped, CommentRuleActionDtoToJSON } from './CommentRuleActionDto';
import { CreateContentRuleActionDto, CreateContentRuleActionDtoFromJSONTyped, CreateContentRuleActionDtoToJSON } from './CreateContentRuleActionDto';
import { DiscourseRuleActionDto, DiscourseRuleActionDtoFromJSONTyped, DiscourseRuleActionDtoToJSON } from './DiscourseRuleActionDto';
import { ElasticSearchRuleActionDto, ElasticSearchRuleActionDtoFromJSONTyped, ElasticSearchRuleActionDtoToJSON } from './ElasticSearchRuleActionDto';
import { EmailRuleActionDto, EmailRuleActionDtoFromJSONTyped, EmailRuleActionDtoToJSON } from './EmailRuleActionDto';
import { FastlyRuleActionDto, FastlyRuleActionDtoFromJSONTyped, FastlyRuleActionDtoToJSON } from './FastlyRuleActionDto';
import { MediumRuleActionDto, MediumRuleActionDtoFromJSONTyped, MediumRuleActionDtoToJSON } from './MediumRuleActionDto';
import { NotificationRuleActionDto, NotificationRuleActionDtoFromJSONTyped, NotificationRuleActionDtoToJSON } from './NotificationRuleActionDto';
import { OpenSearchRuleActionDto, OpenSearchRuleActionDtoFromJSONTyped, OpenSearchRuleActionDtoToJSON } from './OpenSearchRuleActionDto';
import { PrerenderRuleActionDto, PrerenderRuleActionDtoFromJSONTyped, PrerenderRuleActionDtoToJSON } from './PrerenderRuleActionDto';
import { ScriptRuleActionDto, ScriptRuleActionDtoFromJSONTyped, ScriptRuleActionDtoToJSON } from './ScriptRuleActionDto';
import { SignalRRuleActionDto, SignalRRuleActionDtoFromJSONTyped, SignalRRuleActionDtoToJSON } from './SignalRRuleActionDto';
import { SlackRuleActionDto, SlackRuleActionDtoFromJSONTyped, SlackRuleActionDtoToJSON } from './SlackRuleActionDto';
import { TweetRuleActionDto, TweetRuleActionDtoFromJSONTyped, TweetRuleActionDtoToJSON } from './TweetRuleActionDto';
import { TypesenseRuleActionDto, TypesenseRuleActionDtoFromJSONTyped, TypesenseRuleActionDtoToJSON } from './TypesenseRuleActionDto';
import { WebhookRuleActionDto, WebhookRuleActionDtoFromJSONTyped, WebhookRuleActionDtoToJSON } from './WebhookRuleActionDto';
/**
 * 
 * @export
 * @interface RuleActionDto
 */
export interface RuleActionDto {
    /**
     * 
     * @type {string}
     * @memberof RuleActionDto
     */
    actionType: string;
}

export function isAlgoliaRuleActionDto(value: RuleActionDto): value is AlgoliaRuleActionDto {
    return value['actionType'] === 'Algolia';
}

export function isAzureQueueRuleActionDto(value: RuleActionDto): value is AzureQueueRuleActionDto {
    return value['actionType'] === 'AzureQueue';
}

export function isCommentRuleActionDto(value: RuleActionDto): value is CommentRuleActionDto {
    return value['actionType'] === 'Comment';
}

export function isCreateContentRuleActionDto(value: RuleActionDto): value is CreateContentRuleActionDto {
    return value['actionType'] === 'CreateContent';
}

export function isDiscourseRuleActionDto(value: RuleActionDto): value is DiscourseRuleActionDto {
    return value['actionType'] === 'Discourse';
}

export function isElasticSearchRuleActionDto(value: RuleActionDto): value is ElasticSearchRuleActionDto {
    return value['actionType'] === 'ElasticSearch';
}

export function isEmailRuleActionDto(value: RuleActionDto): value is EmailRuleActionDto {
    return value['actionType'] === 'Email';
}

export function isFastlyRuleActionDto(value: RuleActionDto): value is FastlyRuleActionDto {
    return value['actionType'] === 'Fastly';
}

export function isMediumRuleActionDto(value: RuleActionDto): value is MediumRuleActionDto {
    return value['actionType'] === 'Medium';
}

export function isNotificationRuleActionDto(value: RuleActionDto): value is NotificationRuleActionDto {
    return value['actionType'] === 'Notification';
}

export function isOpenSearchRuleActionDto(value: RuleActionDto): value is OpenSearchRuleActionDto {
    return value['actionType'] === 'OpenSearch';
}

export function isPrerenderRuleActionDto(value: RuleActionDto): value is PrerenderRuleActionDto {
    return value['actionType'] === 'Prerender';
}

export function isScriptRuleActionDto(value: RuleActionDto): value is ScriptRuleActionDto {
    return value['actionType'] === 'Script';
}

export function isSignalRRuleActionDto(value: RuleActionDto): value is SignalRRuleActionDto {
    return value['actionType'] === 'SignalR';
}

export function isSlackRuleActionDto(value: RuleActionDto): value is SlackRuleActionDto {
    return value['actionType'] === 'Slack';
}

export function isTweetRuleActionDto(value: RuleActionDto): value is TweetRuleActionDto {
    return value['actionType'] === 'Tweet';
}

export function isTypesenseRuleActionDto(value: RuleActionDto): value is TypesenseRuleActionDto {
    return value['actionType'] === 'Typesense';
}

export function isWebhookRuleActionDto(value: RuleActionDto): value is WebhookRuleActionDto {
    return value['actionType'] === 'Webhook';
}


/**
 * Check if a given object implements the RuleActionDto interface.
 */
export function instanceOfRuleActionDto(value: any): value is RuleActionDto {
    if (!('actionType' in value) || value['actionType'] === undefined) return false;
    return true;
}

export function RuleActionDtoFromJSON(json: any): RuleActionDto {
    return RuleActionDtoFromJSONTyped(json, false);
}

export function RuleActionDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): RuleActionDto {
    if (json == null) {
        return json;
    }
    if (!ignoreDiscriminator) {
        if (json['actionType'] === 'Algolia') {
            return AlgoliaRuleActionDtoFromJSONTyped(json, true);
        }
        if (json['actionType'] === 'AzureQueue') {
            return AzureQueueRuleActionDtoFromJSONTyped(json, true);
        }
        if (json['actionType'] === 'Comment') {
            return CommentRuleActionDtoFromJSONTyped(json, true);
        }
        if (json['actionType'] === 'CreateContent') {
            return CreateContentRuleActionDtoFromJSONTyped(json, true);
        }
        if (json['actionType'] === 'Discourse') {
            return DiscourseRuleActionDtoFromJSONTyped(json, true);
        }
        if (json['actionType'] === 'ElasticSearch') {
            return ElasticSearchRuleActionDtoFromJSONTyped(json, true);
        }
        if (json['actionType'] === 'Email') {
            return EmailRuleActionDtoFromJSONTyped(json, true);
        }
        if (json['actionType'] === 'Fastly') {
            return FastlyRuleActionDtoFromJSONTyped(json, true);
        }
        if (json['actionType'] === 'Medium') {
            return MediumRuleActionDtoFromJSONTyped(json, true);
        }
        if (json['actionType'] === 'Notification') {
            return NotificationRuleActionDtoFromJSONTyped(json, true);
        }
        if (json['actionType'] === 'OpenSearch') {
            return OpenSearchRuleActionDtoFromJSONTyped(json, true);
        }
        if (json['actionType'] === 'Prerender') {
            return PrerenderRuleActionDtoFromJSONTyped(json, true);
        }
        if (json['actionType'] === 'Script') {
            return ScriptRuleActionDtoFromJSONTyped(json, true);
        }
        if (json['actionType'] === 'SignalR') {
            return SignalRRuleActionDtoFromJSONTyped(json, true);
        }
        if (json['actionType'] === 'Slack') {
            return SlackRuleActionDtoFromJSONTyped(json, true);
        }
        if (json['actionType'] === 'Tweet') {
            return TweetRuleActionDtoFromJSONTyped(json, true);
        }
        if (json['actionType'] === 'Typesense') {
            return TypesenseRuleActionDtoFromJSONTyped(json, true);
        }
        if (json['actionType'] === 'Webhook') {
            return WebhookRuleActionDtoFromJSONTyped(json, true);
        }
    }
    return {
        
        'actionType': json['actionType'],
    };
}

export function RuleActionDtoToJSON(value?: RuleActionDto | null, ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }
    if (!ignoreDiscriminator) {
        if (value['actionType'] === 'Algolia') {
            return AlgoliaRuleActionDtoToJSON(value as AlgoliaRuleActionDto, true);
        }
        if (value['actionType'] === 'AzureQueue') {
            return AzureQueueRuleActionDtoToJSON(value as AzureQueueRuleActionDto, true);
        }
        if (value['actionType'] === 'Comment') {
            return CommentRuleActionDtoToJSON(value as CommentRuleActionDto, true);
        }
        if (value['actionType'] === 'CreateContent') {
            return CreateContentRuleActionDtoToJSON(value as CreateContentRuleActionDto, true);
        }
        if (value['actionType'] === 'Discourse') {
            return DiscourseRuleActionDtoToJSON(value as DiscourseRuleActionDto, true);
        }
        if (value['actionType'] === 'ElasticSearch') {
            return ElasticSearchRuleActionDtoToJSON(value as ElasticSearchRuleActionDto, true);
        }
        if (value['actionType'] === 'Email') {
            return EmailRuleActionDtoToJSON(value as EmailRuleActionDto, true);
        }
        if (value['actionType'] === 'Fastly') {
            return FastlyRuleActionDtoToJSON(value as FastlyRuleActionDto, true);
        }
        if (value['actionType'] === 'Medium') {
            return MediumRuleActionDtoToJSON(value as MediumRuleActionDto, true);
        }
        if (value['actionType'] === 'Notification') {
            return NotificationRuleActionDtoToJSON(value as NotificationRuleActionDto, true);
        }
        if (value['actionType'] === 'OpenSearch') {
            return OpenSearchRuleActionDtoToJSON(value as OpenSearchRuleActionDto, true);
        }
        if (value['actionType'] === 'Prerender') {
            return PrerenderRuleActionDtoToJSON(value as PrerenderRuleActionDto, true);
        }
        if (value['actionType'] === 'Script') {
            return ScriptRuleActionDtoToJSON(value as ScriptRuleActionDto, true);
        }
        if (value['actionType'] === 'SignalR') {
            return SignalRRuleActionDtoToJSON(value as SignalRRuleActionDto, true);
        }
        if (value['actionType'] === 'Slack') {
            return SlackRuleActionDtoToJSON(value as SlackRuleActionDto, true);
        }
        if (value['actionType'] === 'Tweet') {
            return TweetRuleActionDtoToJSON(value as TweetRuleActionDto, true);
        }
        if (value['actionType'] === 'Typesense') {
            return TypesenseRuleActionDtoToJSON(value as TypesenseRuleActionDto, true);
        }
        if (value['actionType'] === 'Webhook') {
            return WebhookRuleActionDtoToJSON(value as WebhookRuleActionDto, true);
        }
    }
    return {
        
        'actionType': value['actionType'],
    };
}
