/* tslint:disable */
/* eslint-disable */
/**
 * Squidex API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ResourceLink } from './ResourceLink';
import {
    ResourceLinkFromJSON,
    ResourceLinkFromJSONTyped,
    ResourceLinkToJSON,
} from './ResourceLink';

/**
 * 
 * @export
 * @interface TeamDto
 */
export interface TeamDto {
    /**
     * The links.
     * @type {{ [key: string]: ResourceLink; }}
     * @memberof TeamDto
     */
    links: { [key: string]: ResourceLink; };
    /**
     * The ID of the team.
     * @type {string}
     * @memberof TeamDto
     */
    id: string;
    /**
     * The name of the team.
     * @type {string}
     * @memberof TeamDto
     */
    name: string;
    /**
     * The version of the team.
     * @type {number}
     * @memberof TeamDto
     */
    version: number;
    /**
     * The timestamp when the team has been created.
     * @type {Date}
     * @memberof TeamDto
     */
    created: Date;
    /**
     * The timestamp when the team has been modified last.
     * @type {Date}
     * @memberof TeamDto
     */
    lastModified: Date;
    /**
     * The role name of the user.
     * @type {string}
     * @memberof TeamDto
     */
    roleName?: string | null;
}


/**
 * Check if a given object implements the TeamDto interface.
 */
export function instanceOfTeamDto(value: object): value is TeamDto {
    if (!('links' in value) || value['links'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('version' in value) || value['version'] === undefined) return false;
    if (!('created' in value) || value['created'] === undefined) return false;
    if (!('lastModified' in value) || value['lastModified'] === undefined) return false;
    return true;
}

export function TeamDtoFromJSON(json: any): TeamDto {
    return TeamDtoFromJSONTyped(json, false);
}

export function TeamDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): TeamDto {
    if (json == null) {
        return json;
    }
    return {
        
        'links': (mapValues(json['_links'], ResourceLinkFromJSON)),
        'id': json['id'],
        'name': json['name'],
        'version': json['version'],
        'created': (new Date(json['created'])),
        'lastModified': (new Date(json['lastModified'])),
        'roleName': json['roleName'] == null ? undefined : json['roleName'],
    };
}

export function TeamDtoToJSON(value?: TeamDto | null, ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }
    return {
        
        '_links': (mapValues(value['links'], ResourceLinkToJSON)),
        'id': value['id'],
        'name': value['name'],
        'version': value['version'],
        'created': ((value['created']).toISOString()),
        'lastModified': ((value['lastModified']).toISOString()),
        'roleName': value['roleName'],
    };
}
