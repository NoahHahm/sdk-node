/**
 * Squidex API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ResourceLink } from './ResourceLink';
import {
    ResourceLinkFromJSON,
    ResourceLinkToJSON,
} from './ResourceLink';
import type { SchemaDto } from './SchemaDto';
import {
    SchemaDtoFromJSON,
    SchemaDtoToJSON,
} from './SchemaDto';

/**
 * 
 * @export
 * @interface SchemasDto
 */
export interface SchemasDto {
    /**
     * The links.
     * @type {{ [key: string]: ResourceLink; }}
     * @memberof SchemasDto
     */
    links: { [key: string]: ResourceLink; };
    /**
     * The schemas.
     * @type {Array<SchemaDto>}
     * @memberof SchemasDto
     */
    items: Array<SchemaDto>;
}


/**
 * Check if a given object implements the SchemasDto interface.
 */
export function instanceOfSchemasDto(value: any): value is SchemasDto {
    if (!value) {
        return false;
    }
    if (!('links' in value) || value['links'] === undefined) return false;
    if (!('items' in value) || value['items'] === undefined) return false;
    return true;
}

export function SchemasDtoFromJSON(json: any): SchemasDto {
    return SchemasDtoFromJSONTyped(json, false);
}

export function SchemasDtoFromJSONTyped(json: any, _ignoreDiscriminator: boolean): SchemasDto {
    if (json == null) {
        return json;
    }
    return {
        
        'links': (mapValues(json['_links'], ResourceLinkFromJSON)),
        'items': ((json['items'] as Array<any>).map(SchemaDtoFromJSON)),
    };
}

export function SchemasDtoToJSON(value?: SchemasDto | null, _ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }
    return {
        
        '_links': (mapValues(value['links'], x => ResourceLinkToJSON(x))),
        'items': ((value['items'] as Array<any>).map(x => SchemaDtoToJSON(x))),
    };
}
