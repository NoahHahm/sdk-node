/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import { SquidexApi } from "@fern-api/squidex";
import * as core from "../../../../core";

export const SchemaDto: core.serialization.ObjectSchema<serializers.SchemaDto.Raw, SquidexApi.SchemaDto> =
    core.serialization
        .object({
            id: core.serialization.string().optional(),
            createdBy: core.serialization.string(),
            lastModifiedBy: core.serialization.string(),
            name: core.serialization.string(),
            type: core.serialization.lazy(async () => (await import("../../..")).SchemaType).optional(),
            category: core.serialization.string().optional(),
            properties: core.serialization.lazyObject(async () => (await import("../../..")).SchemaPropertiesDto),
            isSingleton: core.serialization.boolean().optional(),
            isPublished: core.serialization.boolean().optional(),
            created: core.serialization.string().optional(),
            lastModified: core.serialization.string().optional(),
            version: core.serialization.number().optional(),
            scripts: core.serialization.lazyObject(async () => (await import("../../..")).SchemaScriptsDto),
            previewUrls: core.serialization.record(core.serialization.string(), core.serialization.unknown()),
            fieldsInLists: core.serialization.list(core.serialization.string()),
            fieldsInReferences: core.serialization.list(core.serialization.string()),
            fieldRules: core.serialization
                .list(core.serialization.lazyObject(async () => (await import("../../..")).FieldRuleDto))
                .optional(),
            fields: core.serialization.list(
                core.serialization.lazyObject(async () => (await import("../../..")).FieldDto)
            ),
        })
        .extend(core.serialization.lazyObject(async () => (await import("../../..")).Resource));

export declare namespace SchemaDto {
    interface Raw extends serializers.Resource.Raw {
        id?: string | null;
        createdBy: string;
        lastModifiedBy: string;
        name: string;
        type?: serializers.SchemaType.Raw | null;
        category?: string | null;
        properties: serializers.SchemaPropertiesDto.Raw;
        isSingleton?: boolean | null;
        isPublished?: boolean | null;
        created?: string | null;
        lastModified?: string | null;
        version?: number | null;
        scripts: serializers.SchemaScriptsDto.Raw;
        previewUrls: Record<string, unknown>;
        fieldsInLists: string[];
        fieldsInReferences: string[];
        fieldRules?: serializers.FieldRuleDto.Raw[] | null;
        fields: serializers.FieldDto.Raw[];
    }
}
