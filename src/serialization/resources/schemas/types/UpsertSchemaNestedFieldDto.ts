/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import { Squidex } from "@fern-api/squidex";
import * as core from "../../../../core";

export const UpsertSchemaNestedFieldDto: core.serialization.ObjectSchema<
    serializers.UpsertSchemaNestedFieldDto.Raw,
    Squidex.UpsertSchemaNestedFieldDto
> = core.serialization.object({
    name: core.serialization.string(),
    isHidden: core.serialization.boolean().optional(),
    isLocked: core.serialization.boolean().optional(),
    isDisabled: core.serialization.boolean().optional(),
    properties: core.serialization.lazy(async () => (await import("../../..")).FieldPropertiesDto),
});

export declare namespace UpsertSchemaNestedFieldDto {
    interface Raw {
        name: string;
        isHidden?: boolean | null;
        isLocked?: boolean | null;
        isDisabled?: boolean | null;
        properties: serializers.FieldPropertiesDto.Raw;
    }
}
