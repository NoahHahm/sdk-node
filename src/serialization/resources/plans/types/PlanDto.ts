/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import { Squidex } from "@fern-api/squidex";
import * as core from "../../../../core";

export const PlanDto: core.serialization.ObjectSchema<serializers.PlanDto.Raw, Squidex.PlanDto> =
    core.serialization.object({
        id: core.serialization.string(),
        name: core.serialization.string(),
        costs: core.serialization.string(),
        confirmText: core.serialization.string().optional(),
        yearlyConfirmText: core.serialization.string().optional(),
        yearlyCosts: core.serialization.string().optional(),
        yearlyId: core.serialization.string().optional(),
        maxApiBytes: core.serialization.number().optional(),
        maxApiCalls: core.serialization.number().optional(),
        maxAssetSize: core.serialization.number().optional(),
        maxContributors: core.serialization.number().optional(),
    });

export declare namespace PlanDto {
    interface Raw {
        id: string;
        name: string;
        costs: string;
        confirmText?: string | null;
        yearlyConfirmText?: string | null;
        yearlyCosts?: string | null;
        yearlyId?: string | null;
        maxApiBytes?: number | null;
        maxApiCalls?: number | null;
        maxAssetSize?: number | null;
        maxContributors?: number | null;
    }
}
