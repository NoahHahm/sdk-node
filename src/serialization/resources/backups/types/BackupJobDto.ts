/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import { Squidex } from "@fern-api/squidex";
import * as core from "../../../../core";

export const BackupJobDto: core.serialization.ObjectSchema<serializers.BackupJobDto.Raw, Squidex.BackupJobDto> =
    core.serialization
        .object({
            id: core.serialization.string().optional(),
            started: core.serialization.string().optional(),
            stopped: core.serialization.string().optional(),
            handledEvents: core.serialization.number().optional(),
            handledAssets: core.serialization.number().optional(),
            status: core.serialization.lazy(async () => (await import("../../..")).JobStatus).optional(),
        })
        .extend(core.serialization.lazyObject(async () => (await import("../../..")).Resource));

export declare namespace BackupJobDto {
    interface Raw extends serializers.Resource.Raw {
        id?: string | null;
        started?: string | null;
        stopped?: string | null;
        handledEvents?: number | null;
        handledAssets?: number | null;
        status?: serializers.JobStatus.Raw | null;
    }
}
