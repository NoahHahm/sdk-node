/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import { SquidexApi } from "@fern-api/squidex";
import * as core from "../../../../core";

export const WorkflowDto: core.serialization.ObjectSchema<serializers.WorkflowDto.Raw, SquidexApi.WorkflowDto> =
    core.serialization
        .object({
            id: core.serialization.string().optional(),
            name: core.serialization.string().optional(),
            steps: core.serialization.record(
                core.serialization.string(),
                core.serialization.lazyObject(async () => (await import("../../..")).WorkflowStepDto)
            ),
            schemaIds: core.serialization.list(core.serialization.string()).optional(),
            initial: core.serialization.string().optional(),
        })
        .extend(core.serialization.lazyObject(async () => (await import("../../..")).Resource));

export declare namespace WorkflowDto {
    interface Raw extends serializers.Resource.Raw {
        id?: string | null;
        name?: string | null;
        steps: Record<string, serializers.WorkflowStepDto.Raw>;
        schemaIds?: string[] | null;
        initial?: string | null;
    }
}
