/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import { Squidex } from "@fern-api/squidex";
import * as core from "../../../../core";

export const AppLanguageDto: core.serialization.ObjectSchema<serializers.AppLanguageDto.Raw, Squidex.AppLanguageDto> =
    core.serialization
        .object({
            iso2Code: core.serialization.string(),
            englishName: core.serialization.string(),
            fallback: core.serialization.list(core.serialization.string()),
            isMaster: core.serialization.boolean().optional(),
            isOptional: core.serialization.boolean().optional(),
        })
        .extend(core.serialization.lazyObject(async () => (await import("../../..")).Resource));

export declare namespace AppLanguageDto {
    interface Raw extends serializers.Resource.Raw {
        iso2Code: string;
        englishName: string;
        fallback: string[];
        isMaster?: boolean | null;
        isOptional?: boolean | null;
    }
}
