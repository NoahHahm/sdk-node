/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import { Squidex } from "@fern-api/squidex";
import * as core from "../../../../core";

export const UpdateRuleDto: core.serialization.ObjectSchema<serializers.UpdateRuleDto.Raw, Squidex.UpdateRuleDto> =
    core.serialization.object({
        name: core.serialization.string().optional(),
        trigger: core.serialization.lazyObject(async () => (await import("../../..")).RuleTriggerDto).optional(),
        action: core.serialization.lazyObject(async () => (await import("../../..")).RuleActionDto).optional(),
        isEnabled: core.serialization.boolean().optional(),
    });

export declare namespace UpdateRuleDto {
    interface Raw {
        name?: string | null;
        trigger?: serializers.RuleTriggerDto.Raw | null;
        action?: serializers.RuleActionDto.Raw | null;
        isEnabled?: boolean | null;
    }
}
