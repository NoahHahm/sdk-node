/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import { Squidex } from "@fern-api/squidex";
import * as core from "../../../../core";

export const ContentChangedRuleTriggerDto: core.serialization.ObjectSchema<
    serializers.ContentChangedRuleTriggerDto.Raw,
    Squidex.ContentChangedRuleTriggerDto
> = core.serialization.object({
    schemas: core.serialization
        .list(core.serialization.lazyObject(async () => (await import("../../..")).ContentChangedRuleTriggerSchemaDto))
        .optional(),
    handleAll: core.serialization.boolean().optional(),
});

export declare namespace ContentChangedRuleTriggerDto {
    interface Raw {
        schemas?: serializers.ContentChangedRuleTriggerSchemaDto.Raw[] | null;
        handleAll?: boolean | null;
    }
}
