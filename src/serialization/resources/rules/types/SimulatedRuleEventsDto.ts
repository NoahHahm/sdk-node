/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import { Squidex } from "@fern-api/squidex";
import * as core from "../../../../core";

export const SimulatedRuleEventsDto: core.serialization.ObjectSchema<
    serializers.SimulatedRuleEventsDto.Raw,
    Squidex.SimulatedRuleEventsDto
> = core.serialization
    .object({
        items: core.serialization.list(
            core.serialization.lazyObject(async () => (await import("../../..")).SimulatedRuleEventDto)
        ),
        total: core.serialization.number().optional(),
    })
    .extend(core.serialization.lazyObject(async () => (await import("../../..")).Resource));

export declare namespace SimulatedRuleEventsDto {
    interface Raw extends serializers.Resource.Raw {
        items: serializers.SimulatedRuleEventDto.Raw[];
        total?: number | null;
    }
}
