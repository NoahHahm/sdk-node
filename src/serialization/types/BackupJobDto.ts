/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as Squidex from "../../api";
import * as core from "../../core";

export const BackupJobDto: core.serialization.ObjectSchema<serializers.BackupJobDto.Raw, Squidex.BackupJobDto> =
    core.serialization
        .object({
            id: core.serialization.string(),
            started: core.serialization.date(),
            stopped: core.serialization.date().optional(),
            handledEvents: core.serialization.number(),
            handledAssets: core.serialization.number(),
            status: core.serialization.lazy(async () => (await import("..")).JobStatus),
        })
        .extend(core.serialization.lazyObject(async () => (await import("..")).Resource));

export declare namespace BackupJobDto {
    interface Raw extends serializers.Resource.Raw {
        id: string;
        started: string;
        stopped?: string | null;
        handledEvents: number;
        handledAssets: number;
        status: serializers.JobStatus.Raw;
    }
}
