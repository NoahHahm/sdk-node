/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as Squidex from "../../api";
import * as core from "../../core";

export const RuleActionDto: core.serialization.Schema<serializers.RuleActionDto.Raw, Squidex.RuleActionDto> =
    core.serialization
        .union("type", {
            Algolia: core.serialization.lazyObject(async () => (await import("..")).AlgoliaRuleActionDto),
            AzureQueue: core.serialization.lazyObject(async () => (await import("..")).AzureQueueRuleActionDto),
            Comment: core.serialization.lazyObject(async () => (await import("..")).CommentRuleActionDto),
            CreateContent: core.serialization.lazyObject(async () => (await import("..")).CreateContentRuleActionDto),
            Discourse: core.serialization.lazyObject(async () => (await import("..")).DiscourseRuleActionDto),
            ElasticSearch: core.serialization.lazyObject(async () => (await import("..")).ElasticSearchRuleActionDto),
            Email: core.serialization.lazyObject(async () => (await import("..")).EmailRuleActionDto),
            Fastly: core.serialization.lazyObject(async () => (await import("..")).FastlyRuleActionDto),
            Medium: core.serialization.lazyObject(async () => (await import("..")).MediumRuleActionDto),
            Notification: core.serialization.lazyObject(async () => (await import("..")).NotificationRuleActionDto),
            OpenSearch: core.serialization.lazyObject(async () => (await import("..")).OpenSearchRuleActionDto),
            Prerender: core.serialization.lazyObject(async () => (await import("..")).PrerenderRuleActionDto),
            Script: core.serialization.lazyObject(async () => (await import("..")).ScriptRuleActionDto),
            SignalR: core.serialization.lazyObject(async () => (await import("..")).SignalRRuleActionDto),
            Slack: core.serialization.lazyObject(async () => (await import("..")).SlackRuleActionDto),
            Tweet: core.serialization.lazyObject(async () => (await import("..")).TweetRuleActionDto),
            Typesense: core.serialization.lazyObject(async () => (await import("..")).TypesenseRuleActionDto),
            Webhook: core.serialization.lazyObject(async () => (await import("..")).WebhookRuleActionDto),
        })
        .transform<Squidex.RuleActionDto>({
            transform: (value) => value,
            untransform: (value) => value,
        });

export declare namespace RuleActionDto {
    type Raw =
        | RuleActionDto.Algolia
        | RuleActionDto.AzureQueue
        | RuleActionDto.Comment
        | RuleActionDto.CreateContent
        | RuleActionDto.Discourse
        | RuleActionDto.ElasticSearch
        | RuleActionDto.Email
        | RuleActionDto.Fastly
        | RuleActionDto.Medium
        | RuleActionDto.Notification
        | RuleActionDto.OpenSearch
        | RuleActionDto.Prerender
        | RuleActionDto.Script
        | RuleActionDto.SignalR
        | RuleActionDto.Slack
        | RuleActionDto.Tweet
        | RuleActionDto.Typesense
        | RuleActionDto.Webhook;

    interface Algolia extends serializers.AlgoliaRuleActionDto.Raw {
        type: "Algolia";
    }

    interface AzureQueue extends serializers.AzureQueueRuleActionDto.Raw {
        type: "AzureQueue";
    }

    interface Comment extends serializers.CommentRuleActionDto.Raw {
        type: "Comment";
    }

    interface CreateContent extends serializers.CreateContentRuleActionDto.Raw {
        type: "CreateContent";
    }

    interface Discourse extends serializers.DiscourseRuleActionDto.Raw {
        type: "Discourse";
    }

    interface ElasticSearch extends serializers.ElasticSearchRuleActionDto.Raw {
        type: "ElasticSearch";
    }

    interface Email extends serializers.EmailRuleActionDto.Raw {
        type: "Email";
    }

    interface Fastly extends serializers.FastlyRuleActionDto.Raw {
        type: "Fastly";
    }

    interface Medium extends serializers.MediumRuleActionDto.Raw {
        type: "Medium";
    }

    interface Notification extends serializers.NotificationRuleActionDto.Raw {
        type: "Notification";
    }

    interface OpenSearch extends serializers.OpenSearchRuleActionDto.Raw {
        type: "OpenSearch";
    }

    interface Prerender extends serializers.PrerenderRuleActionDto.Raw {
        type: "Prerender";
    }

    interface Script extends serializers.ScriptRuleActionDto.Raw {
        type: "Script";
    }

    interface SignalR extends serializers.SignalRRuleActionDto.Raw {
        type: "SignalR";
    }

    interface Slack extends serializers.SlackRuleActionDto.Raw {
        type: "Slack";
    }

    interface Tweet extends serializers.TweetRuleActionDto.Raw {
        type: "Tweet";
    }

    interface Typesense extends serializers.TypesenseRuleActionDto.Raw {
        type: "Typesense";
    }

    interface Webhook extends serializers.WebhookRuleActionDto.Raw {
        type: "Webhook";
    }
}
